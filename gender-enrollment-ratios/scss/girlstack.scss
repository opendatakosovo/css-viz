// Define constant variables
$containerHeight: 400;
$girlHeight: 150;

$valueMin: 43;
$valueMax: 52;

$stackMinHeight: 35;
$stackMaxHeight: 250;


.preschool .girl{
    background-image: url('../img/preschool-girl.png'); 
}

.pre-primary .girl{
    background-image: url('../img/pre-primary-girl.png'); 
}

.primary-and-lower-secondary .girl{
    background-image: url('../img/primary-and-lower-secondary-girl.png');
}

.high-secondary .girl{
    background-image: url('../img/high-secondary-girl.png');
}

.preschool .stack{
    background-color: #ffcc00;
}

.pre-primary .stack{
    background-color: #ff7700;
}

.primary-and-lower-secondary .stack{
    background-color: #ff0000;
}

.high-secondary .stack{
    background-color: #ff00aa;
}

// The dataset
$data-map: (
    2004: (
		preschool: 48.5019785189373,
		pre-primary: 47.6244601045692,
		primary-and-lower-secondary: 47.8492208296277,
		high-secondary: 44.1800458715596
	),
	2005: (
		preschool: 50.4894283476899,
		pre-primary: 48.0048192771084,
		primary-and-lower-secondary: 48.0253274567012,
		high-secondary: 43.0617402816223
    ),
    2006: (
		preschool: 46.7828152841022,
		pre-primary: 48.380672388449,
		primary-and-lower-secondary: 48.121769239774,
		high-secondary: 43.5004679166996
    ),
    2007: (
		preschool: 44.8654244306418,
		pre-primary: 51.1259890444309,
		primary-and-lower-secondary: 48.2207695672522,
		high-secondary: 44.2947886527653
    ),
    2008: (
		preschool: 45.9241799253585,
		pre-primary: 47.1841008437532,
		primary-and-lower-secondary: 47.5792243981732,
		high-secondary: 45.0183005448571
    ),
    2009: (
		preschool: 45.3809711804185,
		pre-primary: 49.0938792179284,
		primary-and-lower-secondary: 47.8652355779101,
		high-secondary: 44.5167366630467
    ),
    2010: (
		preschool: 47.9433449747769,
		pre-primary: 48.4964622641509,
		primary-and-lower-secondary: 48.2662544861121,
		high-secondary: 45.4341401369197
    ),
    2011: (
		preschool: 47.4550029030385,
		pre-primary: 49.1865509761388,
		primary-and-lower-secondary: 48.3730666829258,
		high-secondary: 45.9491336622078
    ),
    2012: (
		preschool: 46.761922434589,
		pre-primary: 48.8507161490378,
		primary-and-lower-secondary: 48.3730666829258,
		high-secondary: 46.0313806728814
    ),
    2013: (
		preschool: 48.7940630797774,
		pre-primary: 48.0007482579619,
		primary-and-lower-secondary: 48.1942370642623,
		high-secondary: 46.5544598204423
    ),
    2014: (
		preschool: 48.0657127715951,
		pre-primary: 48.5149408684662,
		primary-and-lower-secondary: 48.4127477169659,
		high-secondary: 46.9985551031131
    )
);

//  We need to transform the value range (in percentage) into
//  a stack height range (in pixels).
//
//  Use the following formula:
// 
//  V = Value input (in percentage)
//  Vmin = Value min (in percentage) = 75.6%
//  Vmax = Value max (in percentage) = 104.6%
//
//  Smin = Stack min hight (in pixels) = 20px
//  Smax = Stack max height (in pixels) = 250px
//  S = Stack height output (in pixels)
//
//  S = [(V - Vmin) * (Smax - Smin) / (Vmax - Vmin) + Smin
//
@function stack-height($value) {
    @return round(($value - $valueMin) * ($stackMaxHeight - $stackMinHeight) / ($valueMax - $valueMin) + $stackMinHeight);
}

// Calculate stack height and margin top for school group in each year
@each $year, $map in $data-map {

    $preschoolStackHeight: stack-height(map-get($map, preschool));
    $prePrimaryStackHeight: stack-height(map-get($map, pre-primary));
    $primaryLowerSecondaryStackHeight: stack-height(map-get($map, primary-and-lower-secondary));
    $higherSecondaryStackHeight: stack-height(map-get($map, high-secondary));
    

    .preschool .stack-#{$year} {
        height: $preschoolStackHeight; /** #{map-get($map, preschool)}% **/
    }

    .preschool .girl-#{$year}{
        margin-top: $containerHeight - $girlHeight - $preschoolStackHeight;
    }
    
    .pre-primary .stack-#{$year} {
        height: $prePrimaryStackHeight; /** #{map-get($map, pre-primary)}% **/
    }

    .pre-primary .girl-#{$year}{
        margin-top: $containerHeight - $girlHeight - $prePrimaryStackHeight;
    }

    .primary-and-lower-secondary .stack-#{$year} {
        height: $primaryLowerSecondaryStackHeight; /** #{map-get($map, primary-and-lower-secondary)}% **/
    }

    .primary-and-lower-secondary .girl-#{$year}{
        margin-top: $containerHeight - $girlHeight - $primaryLowerSecondaryStackHeight;
    }

    .high-secondary .stack-#{$year} {
        height: $higherSecondaryStackHeight; /** #{map-get($map, high-secondary)}% **/
    }

    .high-secondary .girl-#{$year}{
        margin-top: $containerHeight - $girlHeight - $higherSecondaryStackHeight;
    }
}